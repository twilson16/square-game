{"version":3,"sources":["src/keyboarder.js","src/constants.js","src/Square.js","src/Hazard.js","src/Coin.js","src/Game.js","script.js"],"names":["Keyboarder","keyState","window","addEventListener","e","keyCode","bind","callback","KEYS","LEFT","RIGHT","UP","DOWN","S","GRID_SIZE","ticksPerMove","COLORS","background","square","wall","hazard","coin","Square","game","pos","x","y","size","keyboarder","on","moveSquare","context","fillStyle","fillRect","direction","Math","min","max","Hazard","vel","velocity","length","center","Coin","isSamePos","posSquare","doesIntersectWithSquare","Game","canvas","document","getElementById","getContext","width","height","squares","hazardsArray","score","floor","random","update","sendHazards","collision","hit","filter","clearRect","border","drawScore","draw","font","fillText","ticks","requestAnimationFrame","tick","strokeStyle","lineWidth","strokeRect","beginPath","moveTo","lineTo","stroke","foundValidPos","entrySide","vx","vy","push","b1","b2","startGame","start"],"mappings":"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","file":"script.980ec527.map","sourceRoot":"..","sourcesContent":["// import Square from './Square'\n// import {COLORS, GRID_SIZE} from './constants'\n// import Hazard from './Hazard'\n// import Coin from './Coin'\n\nclass Keyboarder {\n  constructor () {\n    this.keyState = {}\n\n    window.addEventListener('keydown', function (e) {\n      this.keyState[e.keyCode] = true\n    }.bind(this))\n\n    window.addEventListener('keyup', function (e) {\n      this.keyState[e.keyCode] = false\n    }.bind(this))\n  }\n\n  isDown (keyCode) {\n    return this.keyState[keyCode] === true\n  }\n\n  on (keyCode, callback) {\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === keyCode) {\n        callback()\n      }\n    })\n  }\n}\n\nKeyboarder.KEYS = {\n  LEFT: 37,\n  RIGHT: 39,\n  UP: 38,\n  DOWN: 40,\n  S: 83\n}\n\nexport default Keyboarder\n","export const GRID_SIZE = 60\n\nexport const ticksPerMove = 10\n\nexport const COLORS = {\n  background: '#243196',\n  square: '#FFFFFF',\n  wall: '#FFFFFF',\n  hazard: '#000000',\n  coin: '#eac610'\n}\n","import Keyboarder from './keyboarder'\nimport {COLORS, GRID_SIZE} from './constants'\n// import Hazard from './Hazard'\n// import Coin from './Coin'\n\nclass Square {\n  constructor (game, pos) {\n    this.game = game\n    this.pos = { x: 0, y: 3 }\n    this.size = { x: 50, y: 50 }\n    this.keyboarder = new Keyboarder()\n    this.keyboarder.on(Keyboarder.KEYS.LEFT, () => { this.moveSquare('left') })\n    this.keyboarder.on(Keyboarder.KEYS.RIGHT, () => { this.moveSquare('right') })\n    this.keyboarder.on(Keyboarder.KEYS.UP, () => { this.moveSquare('up') })\n    this.keyboarder.on(Keyboarder.KEYS.DOWN, () => { this.moveSquare('down') })\n  }\n\n  get center () {\n    return {\n      x: (GRID_SIZE * (3 + this.pos.x) + 5) + this.size.x / 2, \n      y: (GRID_SIZE * (3 + this.pos.y) + 5) + this.size.y / 2\n    }\n  }\n\n  update () {\n  }\n\n  draw () {\n    let context = this.game.context\n    context.fillStyle = COLORS.square\n    context.fillRect((GRID_SIZE * (3 + this.pos.x) + 5), (GRID_SIZE * (3 + this.pos.y) + 5), this.size.x, this.size.y)\n  }\n\n  moveSquare (direction) {\n    this.direction = direction\n\n    if (this.direction === 'up') {\n      this.pos.y--\n    } else if (this.direction === 'down') {\n      this.pos.y++\n    } else if (this.direction === 'left') {\n      this.pos.x--\n    } else if (this.direction === 'right') {\n      this.pos.x++\n    }\n\n    this.pos.x = Math.min(Math.max(this.pos.x, 0), 3)\n    this.pos.y = Math.min(Math.max(this.pos.y, 0), 3)\n  }\n}\n\nexport default Square\n","// import Keyboarder from './keyboarder'\n// import Square from './Square'\nimport {COLORS} from './constants'\n// import Coin from './Coin'\n\nclass Hazard {\n  constructor (game, pos, vel) {\n    this.game = game\n    this.velocity = vel\n    this.length = 240\n    this.center = pos\n    this.size = {x: 30, y: 30}\n\n    // this.squares = { x: this.size.width / GRID_SIZE, y: this.size.height / GRID_SIZE }\n  }\n\n  update () {\n    this.center.x += this.velocity.x\n    this.center.y += this.velocity.y\n  }\n\n  draw () {\n    let context = this.game.context\n    context.fillStyle = COLORS.hazard\n    context.fillRect(this.center.x - 15, this.center.y - 15, this.size.x, this.size.y)\n  }\n}\n\nexport default Hazard\n","// import Keyboarder from './keyboarder'\n// import Square from './Square'\nimport {COLORS, GRID_SIZE} from './constants'\n// import Hazard from './Hazard'\n// import {colliding} from './Game'\n\nclass Coin {\n  constructor (game, pos) {\n    this.game = game\n    this.pos = { x: 3, y: 0 }\n    this.center = {\n      x: 390,\n      y: 210\n    }\n    this.size = {\n      x: 30,\n      y: 30\n    }\n  }\n\n  update () {\n  }\n\n  draw () {\n    let context = this.game.context\n    context.fillStyle = COLORS.coin\n    context.fillRect(GRID_SIZE * (3 + this.pos.x) + 15, GRID_SIZE * (this.pos.y + 3) + 15, 30, 30)\n  }\n}\n\nexport default Coin\n","// import Keyboarder from './keyboarder'\nimport Square from './Square'\nimport {\n  COLORS,\n  GRID_SIZE\n} from './constants'\nimport Hazard from './Hazard'\nimport Coin from './Coin'\n\nfunction isSamePos (pos, posSquare) {\n  return pos.x === posSquare.x && pos.y === posSquare.y\n}\n\nfunction doesIntersectWithSquare (pos, posSquare) {\n  for (let pos of posSquare) {\n    if (isSamePos(pos, posSquare)) {\n      return true\n    }\n  }\n  return false\n}\n\nclass Game {\n  constructor () {\n    this.canvas = document.getElementById('screen')\n    this.context = this.canvas.getContext('2d')\n    this.size = {\n      width: this.canvas.width,\n      height: this.canvas.height\n    }\n    this.squares = {\n      x: this.size.width / GRID_SIZE,\n      y: this.size.height / GRID_SIZE\n    }\n    this.square = new Square(this)\n    this.coin = new Coin(this)\n    this.hazardsArray = []\n    this.score = 0\n  }\n\n  update () {\n    if (isSamePos(this.square.pos, this.coin.pos)) {\n      this.score += 1\n      this.coin.pos = {\n        x: Math.floor(Math.random() * 4),\n        y: Math.floor(Math.random() * 4)\n      }\n    }\n    this.square.update()\n    this.coin.update()\n\n    while (this.hazardsArray.length < 3) {\n      this.sendHazards()\n    }\n    for (let hazard of this.hazardsArray) {\n      hazard.update()\n    }\n    \n    for (let hazard of this.hazardsArray) {\n      if (collision(this.square, hazard)) {\n        this.score = 0\n        hazard.hit = true\n      }\n    }\n\n    this.hazardsArray = this.hazardsArray.filter((hazard) => {\n      return !hazard.hit && hazard.center.x >= 0 && hazard.center.x <= this.size.width && hazard.center.y >= 0 && hazard.center.y <= this.size.height\n    })\n  }\n\n  draw () {\n    this.context.clearRect(0, 0, this.size.width, this.size.height)\n\n    this.background()\n    // this.grid()\n    this.border()\n    this.drawScore()\n\n    this.square.draw()\n    this.coin.draw()\n    for (let hazard of this.hazardsArray) {\n      hazard.draw()\n    }\n\n    this.context.font = '30px courier'\n    this.context.fillStyle = COLORS.wall\n    this.context.fillText('use arrow keys to take the coin', GRID_SIZE * 1, GRID_SIZE * 9, GRID_SIZE * 8)\n  }\n\n  tick () {\n    this.ticks++\n    this.update()\n    this.draw()\n    window.requestAnimationFrame(() => this.tick())\n  }\n\n  start () {\n    this.tick()\n  }\n\n  border () {\n    this.context.strokeStyle = COLORS.wall\n    this.context.lineWidth = 20\n    this.context.strokeRect(150, 150, 300, 300)\n  }\n\n  background () {\n    this.context.fillStyle = COLORS.background\n    this.context.fillRect(0, 0, this.size.width, this.size.height)\n  }\n\n  grid () {\n    this.context.strokeStyle = COLORS.wall\n    this.context.lineWidth = 1\n\n    this.context.beginPath()\n    for (var x = 0; x < this.size.width; x += GRID_SIZE) {\n      this.context.moveTo(x, 0)\n      this.context.lineTo(x, this.size.height)\n    }\n\n    for (var y = 0; y < this.size.height; y += GRID_SIZE) {\n      this.context.moveTo(0, y)\n      this.context.lineTo(this.size.width, y)\n    }\n\n    this.context.stroke()\n  }\n\n  drawScore () {\n    this.context.font = '26px courier'\n    this.context.fillStyle = COLORS.wall\n    this.context.fillText('current score:' + this.score, GRID_SIZE * 3, GRID_SIZE * 1.5, GRID_SIZE * 4)\n  }\n\n  placeCoin () {\n    let foundValidPos = false\n    let pos\n    while (!foundValidPos) {\n      pos = {\n        x: Math.floor(Math.random() * (this.squares.x)),\n        y: Math.floor(Math.random() * (this.squares.y))\n      }\n\n      foundValidPos = !(doesIntersectWithSquare(pos, this.coin) ||\n        doesIntersectWithSquare(pos, this.square))\n    }\n  }\n\n  removeCoin (pos) {\n    this.coin = this.coin.filter(function (coin) {\n      return !isSamePos(pos, coin)\n    })\n  }\n\n  sendHazards () {\n    let entrySide = Math.floor((Math.random() * 4) + 1)\n    let x, y, vx, vy\n    if (entrySide === 1) {\n      x = Math.floor(Math.random() * 4) * 60 + 210\n      y = 0\n      vx = 0\n      vy = 2\n    } else if (entrySide === 2) {\n      x = 0\n      y = Math.floor(Math.random() * 4) * 60 + 210\n      vx = 2\n      vy = 0\n    } else if (entrySide === 3) {\n      x = 600\n      y = Math.floor(Math.random() * 4) * 60 + 210\n      vx = -2\n      vy = 0\n    } else if (entrySide === 4) {\n      x = Math.floor(Math.random() * 4) * 60 + 210\n      y = 600\n      vx = 0\n      vy = -2\n    }\n    this.hazardsArray.push(new Hazard(this, {\n      x: x,\n      y: y\n    }, {\n      x: vx,\n      y: vy\n    }))\n  }\n}\n\nfunction collision (b1, b2) {\n  return !(\n    b1 === b2 ||\n    b1.center.x + b1.size.x / 2 < b2.center.x - b2.size.x / 2 ||\n    b1.center.y + b1.size.y / 2 < b2.center.y - b2.size.y / 2 ||\n    b1.center.x - b1.size.x / 2 > b2.center.x + b2.size.x / 2 ||\n    b1.center.y - b1.size.y / 2 > b2.center.y + b2.size.y / 2\n  )\n}\n\nexport default Game\n","import Game from './src/Game'\n\nfunction startGame () {\n  let game = new Game('screen')\n  game.start()\n}\n\nstartGame()\n"]}